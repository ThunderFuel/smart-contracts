/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

import type { Enum, Option } from "./common";

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

export type OptionalIdentityInput = Option<IdentityInput>;

export type OptionalIdentityOutput = Option<IdentityOutput>;

interface PoolAbiInterface extends Interface {
  functions: {
    balance_of: FunctionFragment;
    deposit: FunctionFragment;
    get_asset_manager: FunctionFragment;
    get_exchange: FunctionFragment;
    initialize: FunctionFragment;
    name: FunctionFragment;
    owner: FunctionFragment;
    renounce_ownership: FunctionFragment;
    set_asset_manager: FunctionFragment;
    symbol: FunctionFragment;
    total_supply: FunctionFragment;
    transfer_from: FunctionFragment;
    transfer_ownership: FunctionFragment;
    withdraw: FunctionFragment;
    withdraw_all: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "balance_of",
    values: [IdentityInput, ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "deposit",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_asset_manager",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_exchange",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [ContractIdInput, ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(functionFragment: "name", values?: undefined): Uint8Array;
  encodeFunctionData(functionFragment: "owner", values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: "renounce_ownership",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "set_asset_manager",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "symbol",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "total_supply",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "transfer_from",
    values: [IdentityInput, IdentityInput, ContractIdInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "transfer_ownership",
    values: [IdentityInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [ContractIdInput, BigNumberish]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "withdraw_all",
    values?: undefined
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "balance_of",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "deposit",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_asset_manager",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_exchange",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "initialize",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "name", data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: "owner", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "renounce_ownership",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "set_asset_manager",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "symbol", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "total_supply",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_from",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_ownership",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "withdraw",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "withdraw_all",
    data: BytesLike
  ): DecodedValue;
}

export class PoolAbi extends Contract {
  interface: PoolAbiInterface;
  functions: {
    balance_of: InvokeFunction<
      [account: IdentityInput, asset: ContractIdInput],
      BN
    >;

    deposit: InvokeFunction<[], void>;

    get_asset_manager: InvokeFunction<[], ContractIdOutput>;

    get_exchange: InvokeFunction<[], ContractIdOutput>;

    initialize: InvokeFunction<
      [exchange: ContractIdInput, asset_manager: ContractIdInput],
      void
    >;

    name: InvokeFunction<[], string>;

    owner: InvokeFunction<[], OptionalIdentityOutput>;

    renounce_ownership: InvokeFunction<[], void>;

    set_asset_manager: InvokeFunction<[asset_manager: ContractIdInput], void>;

    symbol: InvokeFunction<[], string>;

    total_supply: InvokeFunction<[asset: ContractIdInput], BN>;

    transfer_from: InvokeFunction<
      [
        from: IdentityInput,
        to: IdentityInput,
        asset: ContractIdInput,
        amount: BigNumberish
      ],
      boolean
    >;

    transfer_ownership: InvokeFunction<[new_owner: IdentityInput], void>;

    withdraw: InvokeFunction<
      [asset: ContractIdInput, amount: BigNumberish],
      void
    >;

    withdraw_all: InvokeFunction<[], void>;
  };
}
