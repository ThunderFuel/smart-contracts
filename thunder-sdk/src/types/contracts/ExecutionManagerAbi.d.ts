/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

import type { Enum, Option } from "./common";

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type RawVecInput = { ptr: any; cap: BigNumberish };

export type RawVecOutput = { ptr: any; cap: BN };

export type VecInput = { buf: RawVecInput; len: BigNumberish };

export type VecOutput = { buf: RawVecOutput; len: BN };

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

export type OptionalIdentityInput = Option<IdentityInput>;

export type OptionalIdentityOutput = Option<IdentityOutput>;

interface ExecutionManagerAbiInterface extends Interface {
  functions: {
    add_strategy: FunctionFragment;
    get_count_whitelisted_strategies: FunctionFragment;
    get_whitelisted_strategies: FunctionFragment;
    initialize: FunctionFragment;
    is_strategy_whitelisted: FunctionFragment;
    owner: FunctionFragment;
    remove_strategy: FunctionFragment;
    renounce_ownership: FunctionFragment;
    transfer_ownership: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "add_strategy",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_count_whitelisted_strategies",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_whitelisted_strategies",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "is_strategy_whitelisted",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(functionFragment: "owner", values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: "remove_strategy",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "renounce_ownership",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "transfer_ownership",
    values: [IdentityInput]
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "add_strategy",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_count_whitelisted_strategies",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_whitelisted_strategies",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "initialize",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "is_strategy_whitelisted",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "owner", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "remove_strategy",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "renounce_ownership",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_ownership",
    data: BytesLike
  ): DecodedValue;
}

export class ExecutionManagerAbi extends Contract {
  interface: ExecutionManagerAbiInterface;
  functions: {
    add_strategy: InvokeFunction<[strategy: ContractIdInput], void>;

    get_count_whitelisted_strategies: InvokeFunction<[], BN>;

    get_whitelisted_strategies: InvokeFunction<[], VecOutput>;

    initialize: InvokeFunction<[], void>;

    is_strategy_whitelisted: InvokeFunction<
      [strategy: ContractIdInput],
      boolean
    >;

    owner: InvokeFunction<[], OptionalIdentityOutput>;

    remove_strategy: InvokeFunction<[strategy: ContractIdInput], void>;

    renounce_ownership: InvokeFunction<[], void>;

    transfer_ownership: InvokeFunction<[new_owner: IdentityInput], void>;
  };
}
