/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from "fuels";

import type { Enum, Option } from "./common";

export type ContractIdInput = { value: string };

export type ContractIdOutput = { value: string };

export type AddressInput = { value: string };

export type AddressOutput = { value: string };

export type OptionalContractIdInput = Option<ContractIdInput>;

export type OptionalContractIdOutput = Option<ContractIdOutput>;

export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;

export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;

export type OptionalIdentityInput = Option<IdentityInput>;

export type OptionalIdentityOutput = Option<IdentityOutput>;

interface TransferSelectorAbiInterface extends Interface {
  functions: {
    add_collection_transfer_manager: FunctionFragment;
    get_transfer_manager_1155: FunctionFragment;
    get_transfer_manager_721: FunctionFragment;
    get_transfer_manager_for_token: FunctionFragment;
    initialize: FunctionFragment;
    owner: FunctionFragment;
    remove_collection_transfer_manager: FunctionFragment;
    renounce_ownership: FunctionFragment;
    transfer_ownership: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "add_collection_transfer_manager",
    values: [ContractIdInput, ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_transfer_manager_1155",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_transfer_manager_721",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "get_transfer_manager_for_token",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [ContractIdInput, ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(functionFragment: "owner", values?: undefined): Uint8Array;
  encodeFunctionData(
    functionFragment: "remove_collection_transfer_manager",
    values: [ContractIdInput]
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "renounce_ownership",
    values?: undefined
  ): Uint8Array;
  encodeFunctionData(
    functionFragment: "transfer_ownership",
    values: [IdentityInput]
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "add_collection_transfer_manager",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_transfer_manager_1155",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_transfer_manager_721",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "get_transfer_manager_for_token",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "initialize",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(functionFragment: "owner", data: BytesLike): DecodedValue;
  decodeFunctionData(
    functionFragment: "remove_collection_transfer_manager",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "renounce_ownership",
    data: BytesLike
  ): DecodedValue;
  decodeFunctionData(
    functionFragment: "transfer_ownership",
    data: BytesLike
  ): DecodedValue;
}

export class TransferSelectorAbi extends Contract {
  interface: TransferSelectorAbiInterface;
  functions: {
    add_collection_transfer_manager: InvokeFunction<
      [collection: ContractIdInput, transfer_manager: ContractIdInput],
      void
    >;

    get_transfer_manager_1155: InvokeFunction<[], OptionalContractIdOutput>;

    get_transfer_manager_721: InvokeFunction<[], OptionalContractIdOutput>;

    get_transfer_manager_for_token: InvokeFunction<
      [collection: ContractIdInput],
      OptionalContractIdOutput
    >;

    initialize: InvokeFunction<
      [
        transfer_manager_721: ContractIdInput,
        transfer_manager_1155: ContractIdInput
      ],
      void
    >;

    owner: InvokeFunction<[], OptionalIdentityOutput>;

    remove_collection_transfer_manager: InvokeFunction<
      [collection: ContractIdInput],
      void
    >;

    renounce_ownership: InvokeFunction<[], void>;

    transfer_ownership: InvokeFunction<[new_owner: IdentityInput], void>;
  };
}
