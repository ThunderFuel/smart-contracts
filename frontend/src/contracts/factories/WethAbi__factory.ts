/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type { WethAbi, WethAbiInterface } from "../WethAbi";
const _abi = {
  types: [
    {
      typeId: 0,
      type: "()",
      components: [],
      typeParameters: null,
    },
    {
      typeId: 1,
      type: "b256",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 2,
      type: "bool",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 3,
      type: "enum Error",
      components: [
        {
          name: "WrongAmount",
          type: 0,
          typeArguments: null,
        },
        {
          name: "ZeroIdentity",
          type: 0,
          typeArguments: null,
        },
        {
          name: "OnlyWETH",
          type: 0,
          typeArguments: null,
        },
        {
          name: "OnlyBaseAsset",
          type: 0,
          typeArguments: null,
        },
        {
          name: "AmountExceedsBalance",
          type: 0,
          typeArguments: null,
        },
        {
          name: "InsufficientAllowance",
          type: 0,
          typeArguments: null,
        },
        {
          name: "DecreasedAllowanceBelowZero",
          type: 0,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 4,
      type: "enum Identity",
      components: [
        {
          name: "Address",
          type: 7,
          typeArguments: null,
        },
        {
          name: "ContractId",
          type: 9,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 5,
      type: "str[13]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 6,
      type: "str[4]",
      components: null,
      typeParameters: null,
    },
    {
      typeId: 7,
      type: "struct Address",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 8,
      type: "struct Aprroval",
      components: [
        {
          name: "owner",
          type: 4,
          typeArguments: null,
        },
        {
          name: "spender",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 9,
      type: "struct ContractId",
      components: [
        {
          name: "value",
          type: 1,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 10,
      type: "struct Deposit",
      components: [
        {
          name: "address",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 11,
      type: "struct Transfer",
      components: [
        {
          name: "from",
          type: 4,
          typeArguments: null,
        },
        {
          name: "to",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 12,
      type: "struct Withdrawal",
      components: [
        {
          name: "address",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      typeParameters: null,
    },
    {
      typeId: 13,
      type: "u64",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "owner",
          type: 4,
          typeArguments: null,
        },
        {
          name: "spender",
          type: 4,
          typeArguments: null,
        },
      ],
      name: "allowance",
      output: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "spender",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "approve",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "account",
          type: 4,
          typeArguments: null,
        },
      ],
      name: "balance_of",
      output: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "spender",
          type: 4,
          typeArguments: null,
        },
        {
          name: "subtracted_amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "decrease_allowance",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [],
      name: "deposit",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "spender",
          type: 4,
          typeArguments: null,
        },
        {
          name: "added_amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "increase_allowance",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [],
      name: "name",
      output: {
        name: "",
        type: 5,
        typeArguments: null,
      },
    },
    {
      inputs: [],
      name: "symbol",
      output: {
        name: "",
        type: 6,
        typeArguments: null,
      },
    },
    {
      inputs: [],
      name: "total_supply",
      output: {
        name: "",
        type: 13,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "to",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "transfer",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "from",
          type: 4,
          typeArguments: null,
        },
        {
          name: "to",
          type: 4,
          typeArguments: null,
        },
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "transfer_from",
      output: {
        name: "",
        type: 2,
        typeArguments: null,
      },
    },
    {
      inputs: [
        {
          name: "amount",
          type: 13,
          typeArguments: null,
        },
      ],
      name: "withdraw",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
    },
  ],
  loggedTypes: [
    {
      logId: 0,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 1,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 2,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: [],
      },
    },
    {
      logId: 3,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 4,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 5,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 6,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: [],
      },
    },
    {
      logId: 7,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 8,
      loggedType: {
        name: "",
        type: 10,
        typeArguments: [],
      },
    },
    {
      logId: 9,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 10,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 11,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: [],
      },
    },
    {
      logId: 12,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 13,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 14,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 15,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: [],
      },
    },
    {
      logId: 16,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 17,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 18,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 19,
      loggedType: {
        name: "",
        type: 8,
        typeArguments: [],
      },
    },
    {
      logId: 20,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 21,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 22,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 23,
      loggedType: {
        name: "",
        type: 11,
        typeArguments: [],
      },
    },
    {
      logId: 24,
      loggedType: {
        name: "",
        type: 3,
        typeArguments: [],
      },
    },
    {
      logId: 25,
      loggedType: {
        name: "",
        type: 12,
        typeArguments: [],
      },
    },
  ],
};

export class WethAbi__factory {
  static readonly abi = _abi;
  static createInterface(): WethAbiInterface {
    return new Interface(_abi) as unknown as WethAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): WethAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as WethAbi;
  }
}
